<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="Authorization.username">xstore</stringProp>
            <stringProp name="Authorization.password">xstore12</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
      </AuthManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X17_APAC_Guest_Lookup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1575974812000</longProp>
        <longProp name="ThreadGroup.end_time">1575974812000</longProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Guest_LastName" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_GuestLookup_LastName.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argLastName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="argRetailLocationId" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_GuestLookup_argRetailLocationId.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argRetailLocationId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Guest_Lookup_TC_001_Search_Last_Name" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GuestLookUp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;${argLastName}&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1306185954">emailRcpts</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Guest_Lookup_TC_001_Search_Retail_LocationID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01 Guest Search argRetailLocationId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;



DateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); // declare as DateFormat
Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
yesterday.add(Calendar.DATE, 0);
Date d = yesterday.getTime(); // get a Date object
String yesDate = sdf.format(d); // toString for Calendars is mostly not really useful

vars.put(&quot;DP_PreviousDate&quot;,yesDate);
log.info(&quot;Previous Date is &quot;+vars.get(&quot;DP_PreviousDate&quot;));


vars.put(&quot;DP_SequenceNumber_Sale&quot;,&quot;${__Random(1,9999,)}${__time(SSS,)}&quot;);
log.info(&quot;Sale Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Sale&quot;));



vars.put(&quot;DP_SequenceNumber_Return&quot;,&quot;${__Random(1,9999,)}${__time(SSS,)}&quot;);
log.info(&quot;Return Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Return&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

SimpleDateFormat crunchifyFormat = new SimpleDateFormat(&quot;MM dd yyyy HH:mm:ss.SSS&quot;);
SimpleDateFormat crunchifyFormat1 = new SimpleDateFormat(&quot;MM dd yyyy&quot;);
crunchifyFormat1.setTimeZone(TimeZone.getTimeZone(&quot;UTC&quot;));

Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
Calendar yesterday1= Calendar.getInstance();
Calendar yesterday2= Calendar.getInstance();

yesterday.add(Calendar.DATE, -3);
yesterday1.add(Calendar.DATE, 0);


Date d = yesterday.getTime(); // get a Date object
Date d1 = yesterday1.getTime();

String currentTime = crunchifyFormat.format(d);
String currentTime1 = crunchifyFormat1.format(d1);


Date date = crunchifyFormat.parse(currentTime);
Date date1 = crunchifyFormat1.parse(currentTime1);


long epochTime = date.getTime();
long epochTime1 = date1.getTime();


String temp=Long.toString(epochTime);
String temp2=Long.toString(epochTime1);

                   
vars.put(&quot;DP_PreviousTime&quot;,temp);
log.info(&quot;Previous Time  is &quot;+vars.get(&quot;DP_PreviousTime&quot;));

vars.put(&quot;DP_BusinessDate&quot;,temp2);
log.info(&quot;Business Date  is &quot;+vars.get(&quot;DP_BusinessDate&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1258113742">Employee</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <doubleProp>
            <name>throughput</name>
            <value>8.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="calcMode">0</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X17_APAC_Edit_Customer" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1575974812000</longProp>
        <longProp name="ThreadGroup.end_time">1575974812000</longProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LastName" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_EditGuest_LastName.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argLastName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="RetailLocationId" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_EditGuest_argRetailLocationId.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argRetailLocationId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Edit_Customer_TC_001_Search_LastName" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GuestLookUp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;${argLastName}&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PartyID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">PartyID</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;organizationId&quot;:1,&quot;partyId&quot;:(.*?),&quot;customerId&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1306185954">emailRcpts</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Edit_Customer_TC_002_SelectAndView" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAndView_Rq1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetById?ID=1%3A%3A${PartyID}&amp;NAME=Party</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RetailLocationId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RetailLocationId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SignUpRetailLocationId&quot;:(.*?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Edit_Customer_TC_003_ContactInfo" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddContactInfo" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${RetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Edit_Customer_TC_004_SaveContactInfo" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveInfo" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyLocaleInformation&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;Xcenter&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:${PartyID},&quot;Sequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Address1&quot;:&quot;Test&quot;,&quot;Country&quot;:&quot;CN&quot;,&quot;Contact&quot;:true,&quot;Primary&quot;:true,&quot;AddressType&quot;:&quot;HOME&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;Xcenter&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:${PartyID},&quot;TelephoneType&quot;:&quot;HOME&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false,&quot;TelephoneNumber&quot;:&quot;${DP_Phone}&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;Xcenter&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:${PartyID},&quot;TelephoneType&quot;:&quot;MOBILE&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false,&quot;TelephoneNumber&quot;:&quot;${DP_Phone}&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;Xcenter&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:${PartyID},&quot;TelephoneType&quot;:&quot;WORK&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false,&quot;TelephoneNumber&quot;:&quot;${DP_Phone}&quot;}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

SimpleDateFormat crunchifyFormat = new SimpleDateFormat(&quot;MM dd yyyy HH:mm:ss.SSS&quot;);
SimpleDateFormat crunchifyFormat1 = new SimpleDateFormat(&quot;MM dd yyyy&quot;);
crunchifyFormat1.setTimeZone(TimeZone.getTimeZone(&quot;UTC&quot;));

Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
Calendar yesterday1= Calendar.getInstance();
Calendar yesterday2= Calendar.getInstance();

yesterday.add(Calendar.DATE, -3);
yesterday1.add(Calendar.DATE, 0);


Date d = yesterday.getTime(); // get a Date object
Date d1 = yesterday1.getTime();

String currentTime = crunchifyFormat.format(d);
String currentTime1 = crunchifyFormat1.format(d1);


Date date = crunchifyFormat.parse(currentTime);
Date date1 = crunchifyFormat1.parse(currentTime1);


long epochTime = date.getTime();
long epochTime1 = date1.getTime();


String temp=Long.toString(epochTime);
String temp2=Long.toString(epochTime1);

                   
vars.put(&quot;DP_PreviousTime&quot;,temp);
log.info(&quot;Previous Time  is &quot;+vars.get(&quot;DP_PreviousTime&quot;));

vars.put(&quot;DP_BusinessDate&quot;,temp2);
log.info(&quot;Business Date  is &quot;+vars.get(&quot;DP_BusinessDate&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;



DateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); // declare as DateFormat
Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
yesterday.add(Calendar.DATE, 0);
Date d = yesterday.getTime(); // get a Date object
String yesDate = sdf.format(d); // toString for Calendars is mostly not really useful

vars.put(&quot;DP_PreviousDate&quot;,yesDate);
log.info(&quot;Previous Date is &quot;+vars.get(&quot;DP_PreviousDate&quot;));


vars.put(&quot;DP_Phone&quot;,&quot;${__Random(1000000,9999999,)}${__time(SSS,)}&quot;);
log.info(&quot;DP_Phone &quot;+vars.get(&quot;DP_Phone&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <doubleProp>
            <name>throughput</name>
            <value>14.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="calcMode">0</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X17_APAC_Guest_Add" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1575974812000</longProp>
        <longProp name="ThreadGroup.end_time">1575974812000</longProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="RetailLocationId" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_Guest_Add_argRetailLocationId.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argRetailLocationId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Guest_Add_T001_SEARCH_NEW_GUEST" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GuestSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;${DP_LastName}&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1100802131">Lookup failed for Query Key</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;



DateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); // declare as DateFormat
Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
yesterday.add(Calendar.DATE, 0);
Date d = yesterday.getTime(); // get a Date object
String yesDate = sdf.format(d); // toString for Calendars is mostly not really useful

vars.put(&quot;DP_PreviousDate&quot;,yesDate);
log.info(&quot;Previous Date is &quot;+vars.get(&quot;DP_PreviousDate&quot;));


vars.put(&quot;DP_SequenceNumber_Sale&quot;,&quot;${__Random(1,9999,)}${__time(SSS,)}&quot;);
log.info(&quot;Sale Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Sale&quot;));


vars.put(&quot;DP_LastName&quot;,&quot;${__time(MMddhhmmssSSS,)}&quot;);
log.info(&quot;Last name &quot;+vars.get(&quot;DP_LastName&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

SimpleDateFormat crunchifyFormat = new SimpleDateFormat(&quot;MM dd yyyy HH:mm:ss.SSS&quot;);
SimpleDateFormat crunchifyFormat1 = new SimpleDateFormat(&quot;MM dd yyyy&quot;);
crunchifyFormat1.setTimeZone(TimeZone.getTimeZone(&quot;UTC&quot;));

Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
Calendar yesterday1= Calendar.getInstance();
Calendar yesterday2= Calendar.getInstance();

yesterday.add(Calendar.DATE, -3);
yesterday1.add(Calendar.DATE, 0);


Date d = yesterday.getTime(); // get a Date object
Date d1 = yesterday1.getTime();

String currentTime = crunchifyFormat.format(d);
String currentTime1 = crunchifyFormat1.format(d1);


Date date = crunchifyFormat.parse(currentTime);
Date date1 = crunchifyFormat1.parse(currentTime1);


long epochTime = date.getTime();
long epochTime1 = date1.getTime();


String temp=Long.toString(epochTime);
String temp2=Long.toString(epochTime1);

                   
vars.put(&quot;DP_PreviousTime&quot;,temp);
log.info(&quot;Previous Time  is &quot;+vars.get(&quot;DP_PreviousTime&quot;));

vars.put(&quot;DP_BusinessDate&quot;,temp2);
log.info(&quot;Business Date  is &quot;+vars.get(&quot;DP_BusinessDate&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Guest_Add_T002_GO_TO_GROUP" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddGuest" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;DeviceRegistration&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;0&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;0&quot;,&quot;IpAddress&quot;:&quot;10.163.249.100&quot;,&quot;DateTimestamp&quot;:${DP_BusinessDate},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;XtoreVersion&quot;:&quot;17.0.2.0.46 - 1.14.1 - 0.0&quot;,&quot;EnvVersion&quot;:&quot;env17.0.2.0.46 - ts00000&quot;,&quot;ActiveFlag&quot;:true,&quot;PrimaryRegister&quot;:true}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(hhmmss.sss,)}+0800</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Guest_Add_T003_SAVE_GUEST_003" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveGuestRq1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetById?ID=1%3A%3A4513200${DP_PartyID}&amp;NAME=Party</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1425065347">Lookup failed</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">vars.put(&quot;DP_PartyID&quot;,&quot;${__Random(100000000,999999999,)}&quot;);
log.info(&quot;Party ID for Guest &quot;+vars.get(&quot;DP_PartyID&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveGuestRq2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;Party&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;AllegianceRetailLocationId&quot;:${argRetailLocationId},&quot;CustomerId&quot;:&quot;C4513200${DP_PartyID}&quot;,&quot;FirstName&quot;:&quot;PERFTEST&quot;,&quot;LastName&quot;:&quot;${DP_LastName}&quot;,&quot;PartyTypeCode&quot;:&quot;CUSTOMER&quot;,&quot;SignUpRetailLocationId&quot;:${argRetailLocationId},&quot;Void&quot;:false,&quot;Active&quot;:true,&quot;EmailRcpts&quot;:false,&quot;AnniversaryDate&quot;:${DP_PreviousTime},&quot;Prospect&quot;:false,&quot;Rent&quot;:false,&quot;PrivacyCard&quot;:false,&quot;CommercialCustomer&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CustomerAffiliation&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;CustomerGroupId&quot;:&quot;DEFAULT&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyLocaleInformation&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;Sequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Address1&quot;:&quot;RtestAddr&quot;,&quot;Country&quot;:&quot;CN&quot;,&quot;Contact&quot;:true,&quot;Primary&quot;:true,&quot;AddressType&quot;:&quot;HOME&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;TelephoneType&quot;:&quot;HOME&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;TelephoneType&quot;:&quot;WORK&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;TelephoneType&quot;:&quot;MOBILE&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyTelephone&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;TelephoneType&quot;:&quot;WORKFAX&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PartyEmail&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;PartyId&quot;:4513200${DP_PartyID},&quot;Sequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;EmailType&quot;:&quot;Home&quot;,&quot;Contact&quot;:false,&quot;Primary&quot;:true}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(hhmmss.sss,)}+0800</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <doubleProp>
            <name>throughput</name>
            <value>5.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="calcMode">0</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X17_APAC_Sales_Returns" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1575552860000</longProp>
        <longProp name="ThreadGroup.end_time">1575552860000</longProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">CountrIncr</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LastName" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_Sales_LastName.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argLastName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="RetailLocationId" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_Sales_argRetailLocationId.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argRetailLocationId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="Authorization.username">xstore</stringProp>
              <stringProp name="Authorization.password">xstore12</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        </AuthManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T001_GUEST_SEARCH_WITH_RETAIL_LOCATIONID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01 Guest Search argRetailLocationId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2133469047">EmployeeId</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;



DateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); // declare as DateFormat
Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
yesterday.add(Calendar.DATE, 0);
Date d = yesterday.getTime(); // get a Date object
String yesDate = sdf.format(d); // toString for Calendars is mostly not really useful

vars.put(&quot;DP_PreviousDate&quot;,yesDate);
//log.info(&quot;Previous Date is &quot;+vars.get(&quot;DP_PreviousDate&quot;));


//vars.put(&quot;DP_SequenceNumber_Sale&quot;,&quot;${__Random(1,9999,)}${__time(SSS,)}&quot;);
//log.info(&quot;Sale Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Sale&quot;));

vars.put(&quot;DP_SequenceNumber_Sale&quot;,&quot;${__time(MMddhhmmssSSS,)}${__Random(1,99,)}&quot;);
//log.info(&quot;Sale Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Sale&quot;));


//vars.put(&quot;DP_SequenceNumber_Return&quot;,&quot;${__Random(1,9999,)}${__time(SSS,)}&quot;);
//log.info(&quot;Return Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Return&quot;));

vars.put(&quot;DP_SequenceNumber_Return&quot;,&quot;${__time(ddMMhhmmssSSS,)}${__Random(1,99,)}&quot;);
//log.info(&quot;Return Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Return&quot;));

//vars.put(&quot;DP_SequenceNumber_New_Sale&quot;,&quot;${__time(ddhhmmss,)}${__Random(1,99,)}&quot;);
//log.info(&quot;NEW  Sale Transaction Sequence Number &quot;+vars.get(&quot;DP_SequenceNumber_Sale&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

SimpleDateFormat crunchifyFormat = new SimpleDateFormat(&quot;MM dd yyyy HH:mm:ss.SSS&quot;);
SimpleDateFormat crunchifyFormat1 = new SimpleDateFormat(&quot;MM dd yyyy&quot;);
crunchifyFormat1.setTimeZone(TimeZone.getTimeZone(&quot;UTC&quot;));

Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
Calendar yesterday1= Calendar.getInstance();
Calendar yesterday2= Calendar.getInstance();

yesterday.add(Calendar.DATE, -3);
yesterday1.add(Calendar.DATE, 0);


Date d = yesterday.getTime(); // get a Date object
Date d1 = yesterday1.getTime();

String currentTime = crunchifyFormat.format(d);
String currentTime1 = crunchifyFormat1.format(d1);


Date date = crunchifyFormat.parse(currentTime);
Date date1 = crunchifyFormat1.parse(currentTime1);


long epochTime = date.getTime();
long epochTime1 = date1.getTime();


String temp=Long.toString(epochTime);
String temp2=Long.toString(epochTime1);

                   
vars.put(&quot;DP_PreviousTime&quot;,temp);
//log.info(&quot;Previous Time  is &quot;+vars.get(&quot;DP_PreviousTime&quot;));

vars.put(&quot;DP_BusinessDate&quot;,temp2);
//log.info(&quot;Business Date  is &quot;+vars.get(&quot;DP_BusinessDate&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T002_GUEST_SEARCH_WITH_LNAME" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02 Guest Search argLastName" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;${argLastName}&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CP_PartyID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CP_PartyID</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;organizationId&quot;:1,&quot;partyId&quot;:(.*?),&quot;customerId&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1459599807">lastName</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T003_SELECT_GUEST_WITH_RETAIL_LOCATIONID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03 Select Guest argRetailLocationId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1258113742">Employee</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T004_SELECT_GUEST_WITH_CUSTOMER_LOOKUP" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03 Select Guest LLU_CRM_CUSTOMER_LookUp_Primary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;Test&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1459599807">lastName</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T005_SELECT_GUEST_WITH_PARTY_ID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04 Select Guest argPartyID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/GetById?ID=1%3A%3A${CP_PartyID}&amp;NAME=Party</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">LOOKUP</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CustID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_CustID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;CustomerId&quot;:&quot;(.*?)&quot;,&quot;FirstName&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1929035314">OrganizationId</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T006_INVENTORY_JOURNAL" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06 Sale InventoryJournal" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:1,&quot;JournalSequence&quot;:1,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380087&quot;,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Quantity&quot;:1,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:3,&quot;JournalSequence&quot;:2,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380087&quot;,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Quantity&quot;:1,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:4,&quot;JournalSequence&quot;:3,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380088&quot;,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Quantity&quot;:1,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:5,&quot;JournalSequence&quot;:4,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380088&quot;,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Quantity&quot;:1,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;ON_HAND&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;DATALOADER&quot;,&quot;UpdateDate&quot;:${DP_PreviousTime},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:-19,&quot;InitUnitcount&quot;:-17,&quot;InventoryValue&quot;:76.5344}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;ON_HAND&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;DATALOADER&quot;,&quot;UpdateDate&quot;:1575456210646,&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:-14,&quot;InitUnitcount&quot;:-12,&quot;InventoryValue&quot;:81.2952}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;SOLD&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_PreviousTime},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:9,&quot;InitUnitcount&quot;:7}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;SOLD&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_PreviousTime},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:14,&quot;InitUnitcount&quot;:12}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T007_RETAIL_TRANSACTION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07 Sale RetailTransaction" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailTransaction&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;CustomerPartyId&quot;:${CP_PartyID},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.RetailTransaction&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;TransactionDate&quot;:${DP_BusinessDate},&quot;BeginTimeInt&quot;:184010900,&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;KeyedOffline&quot;:false,&quot;Posted&quot;:false,&quot;SessionId&quot;:${argRetailLocationId}001000025,&quot;Subtotal&quot;:1800,&quot;TaxAmount&quot;:207,&quot;RoundedAmount&quot;:0,&quot;Total&quot;:1800,&quot;TransactionStatusCode&quot;:&quot;COMPLETE&quot;,&quot;TransactionTypeCode&quot;:&quot;RETAIL_SALE&quot;,&quot;GenericStorage&quot;:false,&quot;OperatorPartyId&quot;:1,&quot;PostVoid&quot;:false,&quot;CashDrawerId&quot;:&quot;1&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:450,&quot;BaseUnitPrice&quot;:450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:450,&quot;GrossAmount&quot;:450,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:398,&quot;Quantity&quot;:1,&quot;Return&quot;:false,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380087&quot;,&quot;UnitPrice&quot;:450,&quot;VatAmount&quot;:51.7699115100000000,&quot;ForceZeroExtendedAmt&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:1,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:51.7699115100000000,&quot;TaxPercentage&quot;:0.1300,&quot;RawTaxAmount&quot;:51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:1,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TaxLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:207.08,&quot;TaxPercentage&quot;:0.1300,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:1800,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VAT&quot;,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:2,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.TaxLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;TAX&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:6,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:450,&quot;BaseUnitPrice&quot;:450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:450,&quot;GrossAmount&quot;:450,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:398,&quot;Quantity&quot;:1,&quot;Return&quot;:false,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380087&quot;,&quot;UnitPrice&quot;:450,&quot;VatAmount&quot;:51.7699115100000000,&quot;ForceZeroExtendedAmt&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:2,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:51.7699115100000000,&quot;TaxPercentage&quot;:0.1300,&quot;RawTaxAmount&quot;:51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:3,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:450,&quot;BaseUnitPrice&quot;:450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:450,&quot;GrossAmount&quot;:450,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:398,&quot;Quantity&quot;:1,&quot;Return&quot;:false,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380088&quot;,&quot;UnitPrice&quot;:450,&quot;VatAmount&quot;:51.7699115100000000,&quot;ForceZeroExtendedAmt&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:3,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:51.7699115100000000,&quot;TaxPercentage&quot;:0.1300,&quot;RawTaxAmount&quot;:51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:4,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:450,&quot;BaseUnitPrice&quot;:450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:450,&quot;GrossAmount&quot;:450,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:398,&quot;Quantity&quot;:1,&quot;Return&quot;:false,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380088&quot;,&quot;UnitPrice&quot;:450,&quot;VatAmount&quot;:51.7699115100000000,&quot;ForceZeroExtendedAmt&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:4,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:51.7699115100000000,&quot;TaxPercentage&quot;:0.1300,&quot;RawTaxAmount&quot;:51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;TransactionLineItemSequence&quot;:5,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;SourceLocationId&quot;:&quot;1&quot;,&quot;SourceBucketId&quot;:&quot;ON_HAND&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;SOLD&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_SALE&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TenderLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Amount&quot;:1800,&quot;Change&quot;:false,&quot;HostValidation&quot;:false,&quot;TenderId&quot;:&quot;CNY_CURRENCY&quot;,&quot;TenderStatusCode&quot;:&quot;Tender&quot;,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;RetailTransactionLineItemSequence&quot;:6,&quot;ClassName&quot;:&quot;dtv.xst.dao.ttr.impl.TenderLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;LineItemTypeCode&quot;:&quot;TENDER&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:5,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PosTransactionProperty&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;PropertyCode&quot;:&quot;RECEIPT_DELIVERY_METHOD&quot;,&quot;Type&quot;:&quot;STRING&quot;,&quot;StringValue&quot;:&quot;PAPER&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TransactionVersion&quot;,&quot;cmd&quot;:&quot;INSERT|INSERT_OR_UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseAppVersion&quot;:&quot;17.0.2.0.46&quot;,&quot;BaseAppDate&quot;:1541628862000,&quot;BaseSchemaVersion&quot;:&quot;17.0.2.0.46&quot;,&quot;BaseSchemaDate&quot;:1575424021000,&quot;CustomerAppVersion&quot;:&quot;1.14.1 - 0.0&quot;,&quot;CustomerSchemaVersion&quot;:&quot;1.14.1 - 0.0&quot;,&quot;CustomerSchemaDate&quot;:1575424021000}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T008_RETAIL_POS_LOG_DATA" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08 Sale PosLogData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PosLogData&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PoslogData&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;POSLog xmlns=\&quot;http://www.nrf-arts.org/IXRetail/namespace/\&quot;\n             xmlns:dtv=\&quot;http://www.datavantagecorp.com/xstore/\&quot;\n             xmlns:xs=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;\n             xs:schemaLocation=\&quot;http://www.nrf-arts.org/IXRetail/namespace/ POSLog.xsd\&quot; &gt;\n&lt;Transaction xmlns:dtv=\&quot;http://www.datavantagecorp.com/xstore/\&quot; CancelFlag=\&quot;false\&quot; OfflineFlag=\&quot;false\&quot; TrainingModeFlag=\&quot;false\&quot; dtv:AppVersion=\&quot;17.0.2.0.46 - 1.14.1 - 0.0\&quot; dtv:TransactionType=\&quot;RETAIL_SALE\&quot; &gt;\n&lt;dtv:OrganizationID&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:OrganizationID&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;TillID&gt;&lt;![CDATA[${argRetailLocationId}001000025]]&gt;&lt;/TillID&gt;\n&lt;dtv:CashDrawerID&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:CashDrawerID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[1425]]&gt;&lt;/SequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:40:10.900]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:43:30.671]]&gt;&lt;/EndDateTime&gt;\n&lt;OperatorID&gt;&lt;![CDATA[1]]&gt;&lt;/OperatorID&gt;\n&lt;CurrencyCode&gt;&lt;![CDATA[CNY]]&gt;&lt;/CurrencyCode&gt;\n&lt;dtv:PosTransactionProperties&gt;\n&lt;dtv:PosTransactionPropertyCode&gt;&lt;![CDATA[RECEIPT_DELIVERY_METHOD]]&gt;&lt;/dtv:PosTransactionPropertyCode&gt;\n&lt;dtv:PosTransactionPropertyValue&gt;&lt;![CDATA[PAPER]]&gt;&lt;/dtv:PosTransactionPropertyValue&gt;\n&lt;/dtv:PosTransactionProperties&gt;\n&lt;RetailTransaction TransactionStatus=\&quot;Delivered\&quot; TypeCode=\&quot;Transaction\&quot;&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[1]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:03.236]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:03.267]]&gt;&lt;/EndDateTime&gt;\n&lt;Sale ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 2]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;dtv:ScannedItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/dtv:ScannedItemID&gt;\n&lt;GiftReceiptFlag&gt;&lt;![CDATA[false]]&gt;&lt;/GiftReceiptFlag&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/Sale&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[2]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:08.871]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:08.901]]&gt;&lt;/EndDateTime&gt;\n&lt;Sale ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 2]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;dtv:ScannedItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/dtv:ScannedItemID&gt;\n&lt;GiftReceiptFlag&gt;&lt;![CDATA[false]]&gt;&lt;/GiftReceiptFlag&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/Sale&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[3]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:13.703]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:13.809]]&gt;&lt;/EndDateTime&gt;\n&lt;Sale ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 4]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;dtv:ScannedItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/dtv:ScannedItemID&gt;\n&lt;GiftReceiptFlag&gt;&lt;![CDATA[false]]&gt;&lt;/GiftReceiptFlag&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/Sale&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[4]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:17.493]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:17.518]]&gt;&lt;/EndDateTime&gt;\n&lt;Sale ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 4]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;dtv:ScannedItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/dtv:ScannedItemID&gt;\n&lt;GiftReceiptFlag&gt;&lt;![CDATA[false]]&gt;&lt;/GiftReceiptFlag&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/Sale&gt;\n&lt;/LineItem&gt;\n&lt;LineItem  VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[5]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:42:13.773]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:43:27.746]]&gt;&lt;/EndDateTime&gt;\n&lt;Tender TenderType=\&quot;Cash\&quot; TypeCode=\&quot;Sale\&quot; dtv:ChangeFlag=\&quot;false\&quot;&gt;\n&lt;TenderID&gt;&lt;![CDATA[CNY_CURRENCY]]&gt;&lt;/TenderID&gt;\n&lt;Amount Currency=\&quot;CNY\&quot;&gt;&lt;![CDATA[1800.00]]&gt;&lt;/Amount&gt;\n&lt;/Tender&gt;\n&lt;/LineItem&gt;\n&lt;LineItem  VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[6]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:03.277]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T18:41:03.277]]&gt;&lt;/EndDateTime&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[1800.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[207.0800000]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/LineItem&gt;\n&lt;Total TotalType=\&quot;TransactionGrandAmount\&quot;&gt;&lt;![CDATA[1800.00]]&gt;&lt;/Total&gt;\n&lt;RoundedTotal&gt;&lt;![CDATA[0.00]]&gt;&lt;/RoundedTotal&gt;\n&lt;Customer&gt;\n&lt;Name&gt;&lt;![CDATA[Mark  TestCN050718_2]]&gt;&lt;/Name&gt;\n&lt;ActiveFlag&gt;&lt;![CDATA[false]]&gt;&lt;/ActiveFlag&gt;\n&lt;Address&gt;\n&lt;/Address&gt;\n&lt;eMail&gt;&lt;![CDATA[mark.eloquaps_test@gmail.com]]&gt;&lt;/eMail&gt;\n&lt;ContactFlag&gt;&lt;![CDATA[false]]&gt;&lt;/ContactFlag&gt;\n&lt;eMailReceipt&gt;&lt;![CDATA[false]]&gt;&lt;/eMailReceipt&gt;\n&lt;dtv:GuestProperty&gt;\n&lt;dtv:Property&gt;\n&lt;dtv:PropertyCode&gt;&lt;![CDATA[OPT_IN_STATUS]]&gt;&lt;/dtv:PropertyCode&gt;\n&lt;dtv:PropertyType&gt;&lt;![CDATA[BOOLEAN]]&gt;&lt;/dtv:PropertyType&gt;\n&lt;dtv:PropertyBoolean&gt;&lt;![CDATA[false]]&gt;&lt;/dtv:PropertyBoolean&gt;\n&lt;/dtv:Property&gt;\n&lt;/dtv:GuestProperty&gt;\n&lt;dtv:CustomerID&gt;&lt;![CDATA[CargRetailLocationId00100500154]]&gt;&lt;/dtv:CustomerID&gt;\n&lt;AlternateKey TypeCode=\&quot;XSTORE_ID\&quot;&gt;\n&lt;AlternateID&gt;&lt;![CDATA[CargRetailLocationId00100500154]]&gt;&lt;/AlternateID&gt;\n&lt;/AlternateKey&gt;\n&lt;AlternateKey TypeCode=\&quot;XSTORE_CUST_ID\&quot;&gt;\n&lt;AlternateID&gt;&lt;![CDATA[CargRetailLocationId00100500154]]&gt;&lt;/AlternateID&gt;\n&lt;/AlternateKey&gt;\n&lt;Telephone PrimaryFlag=\&quot;false\&quot; TypeCode=\&quot;WORKFAX\&quot;&gt;\n&lt;FullTelephoneNumber&gt;&lt;![CDATA[mark.eloquaps_test@gmail.com]]&gt;&lt;/FullTelephoneNumber&gt;\n&lt;dtv:ContactFlag&gt;&lt;![CDATA[false]]&gt;&lt;/dtv:ContactFlag&gt;\n&lt;/Telephone&gt;\n&lt;/Customer&gt;\n&lt;/RetailTransaction&gt;\n&lt;/Transaction&gt;\n&lt;/POSLog&gt;&quot;}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T009_UPDATE_SALE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09 Sale Update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailTransaction&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;CustomerPartyId&quot;:${CP_PartyID},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.RetailTransaction&quot;,&quot;BeginDateTimestamp&quot;:${DP_PreviousTime},&quot;TransactionDate&quot;:${DP_BusinessDate},&quot;BeginTimeInt&quot;:184010900,&quot;EndDateTimestamp&quot;:${DP_PreviousTime},&quot;KeyedOffline&quot;:false,&quot;Posted&quot;:true,&quot;SessionId&quot;:${argRetailLocationId}001000050,&quot;Subtotal&quot;:1800,&quot;TaxAmount&quot;:207,&quot;RoundedAmount&quot;:0,&quot;Total&quot;:1800,&quot;TransactionStatusCode&quot;:&quot;COMPLETE&quot;,&quot;TransactionTypeCode&quot;:&quot;RETAIL_SALE&quot;,&quot;GenericStorage&quot;:false,&quot;OperatorPartyId&quot;:1,&quot;PostVoid&quot;:false,&quot;CashDrawerId&quot;:&quot;1&quot;}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_SALES_T010_FLASH_SALE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10 Sale FlashSale" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Long&quot;,&quot;argTransSeq&quot;:&quot;Long&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argWrkstnId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;SP_FLASH_SALES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argTransSeq&quot;:${DP_SequenceNumber_Sale},&quot;argOrganizationId&quot;:1,&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argWrkstnId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="ReturnToStoreLogicController" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(${CountrIncr}%10 == &quot;0&quot;,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T001_GUEST_SEARCH_WITH_RETAIL_LOCATIONID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01 Guest Search argRetailLocationId" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2133469047">EmployeeId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T002_GUEST_SEARCH_WITH_LNAME" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02 Guest Search argLastName" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;${argLastName}&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CP_PartyID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CP_PartyID</stringProp>
                <stringProp name="RegexExtractor.regex">{&quot;organizationId&quot;:1,&quot;partyId&quot;:(.*?),&quot;customerId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1459599807">lastName</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T003_SELECT_GUEST_WITH_RETAIL_LOCATIONID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03 Select Guest argRetailLocationId" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2133469047">EmployeeId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T004_SELECT_GUEST_WITH_CUSTOMER_LOOKUP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03 Select Guest LLU_CRM_CUSTOMER_LookUp_Primary" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argPrimaryAddress&quot;:&quot;Boolean&quot;,&quot;argCountry&quot;:&quot;String&quot;,&quot;argLastName&quot;:&quot;String&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argVoidFlag&quot;:&quot;Boolean&quot;},&quot;QueryKey&quot;:&quot;LLU_CRM_CUSTOMER_LOOKUP_PRIMARY&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argPrimaryAddress&quot;:true,&quot;argCountry&quot;:&quot;CN&quot;,&quot;argLastName&quot;:&quot;Test&quot;,&quot;argOrganizationId&quot;:1,&quot;argVoidFlag&quot;:false}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1459599807">lastName</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T005_SELECT_GUEST_WITH_PARTY_ID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04 Select Guest argPartyID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetById?ID=1%3A%3A${CP_PartyID}&amp;NAME=Party</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_CustID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">C_CustID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;CustomerId&quot;:&quot;(.*?)&quot;,&quot;FirstName&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1394955679">LastName</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T006_CLICK_RETURNS_LOCKED_STORE_EMPLOYEES" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLICK_RETUNRS_LOCKED_STORE_EMPLOYEES" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">LOOKUP</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2133469047">EmployeeId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T007_Add_Tenders" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add_Tenders" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;request&quot;:[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Integer&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;LOCKED_STORE_EMPLOYEES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argOrganizationId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/xcenter/dtx/GetByQuery</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2133469047">EmployeeId</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T008_Pay_InventoryJournal" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InventoryJournal" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:1,&quot;JournalSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380087&quot;,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Quantity&quot;:1,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:3,&quot;JournalSequence&quot;:2,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380087&quot;,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Quantity&quot;:1,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:1638,&quot;TransactionLineItemSequence&quot;:4,&quot;JournalSequence&quot;:3,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380088&quot;,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Quantity&quot;:1,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;InventoryJournal&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:1638,&quot;TransactionLineItemSequence&quot;:5,&quot;JournalSequence&quot;:4,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;InventoryItemId&quot;:&quot;3380088&quot;,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Quantity&quot;:1,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;ON_HAND&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;DATALOADER&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:-18,&quot;InitUnitcount&quot;:-20,&quot;InventoryValue&quot;:76.5344}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;StockLedger&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;,&quot;originDS&quot;:&quot;StorePrimary&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BucketId&quot;:&quot;ON_HAND&quot;,&quot;InvLocationId&quot;:&quot;1&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;DATALOADER&quot;,&quot;UpdateDate&quot;:${DP_BusinessDate},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;Unitcount&quot;:-21,&quot;InitUnitcount&quot;:-23,&quot;InventoryValue&quot;:81.2952}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T009_Pay_RetailTransaction" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RetailTransaction" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000209,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:1,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000210,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:3,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000211,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:4,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000212,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:5,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}]]}{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailTransaction&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;CustomerPartyId&quot;:${C_CustID},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.RetailTransaction&quot;,&quot;BeginDateTimestamp&quot;:1575989840747,&quot;TransactionDate&quot;:${DP_BusinessDate},&quot;BeginTimeInt&quot;:145720747,&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;KeyedOffline&quot;:false,&quot;Posted&quot;:false,&quot;SessionId&quot;:${argRetailLocationId}001000031,&quot;Subtotal&quot;:-1800,&quot;TaxAmount&quot;:-207,&quot;RoundedAmount&quot;:0,&quot;Total&quot;:-1800,&quot;TransactionStatusCode&quot;:&quot;COMPLETE&quot;,&quot;TransactionTypeCode&quot;:&quot;RETAIL_SALE&quot;,&quot;GenericStorage&quot;:false,&quot;OperatorPartyId&quot;:1,&quot;PostVoid&quot;:false,&quot;CashDrawerId&quot;:&quot;1&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:-450,&quot;BaseUnitPrice&quot;:-450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:-450,&quot;GrossAmount&quot;:-450,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:-398,&quot;OriginalBusinessDate&quot;:${DP_BusinessDate},&quot;OriginalLineItemSequence&quot;:1,&quot;OriginalRetailLocationId&quot;:${argRetailLocationId},&quot;OriginalTransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;OriginalWorkstationId&quot;:1,&quot;Quantity&quot;:1,&quot;Return&quot;:true,&quot;ReturnTypeCode&quot;:&quot;VERIFIED&quot;,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380087&quot;,&quot;UnitPrice&quot;:-450,&quot;VatAmount&quot;:-51.7699115100,&quot;ForceZeroExtendedAmt&quot;:false,&quot;ReturnReasonCode&quot;:&quot;PRT000R1&quot;,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:-450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:1,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:-51.7699115100,&quot;TaxPercentage&quot;:0.13,&quot;RawTaxAmount&quot;:-51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxOverridePercentage&quot;:0.13,&quot;TaxableAmount&quot;:-450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:1,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:1575961338776,&quot;CreateUserId&quot;:&quot;1&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TaxLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:1575961338873,&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:-207.08,&quot;TaxPercentage&quot;:0.1300,&quot;TaxOverride&quot;:false,&quot;TaxableAmount&quot;:-1800,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VAT&quot;,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:2,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.TaxLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;TAX&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:6,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:-450,&quot;BaseUnitPrice&quot;:-450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:-450,&quot;GrossAmount&quot;:-450,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:-398,&quot;OriginalBusinessDate&quot;:${DP_BusinessDate},&quot;OriginalLineItemSequence&quot;:3,&quot;OriginalRetailLocationId&quot;:${argRetailLocationId},&quot;OriginalTransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;OriginalWorkstationId&quot;:1,&quot;Quantity&quot;:1,&quot;Return&quot;:true,&quot;ReturnTypeCode&quot;:&quot;VERIFIED&quot;,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380087&quot;,&quot;UnitPrice&quot;:-450,&quot;VatAmount&quot;:-51.7699115100,&quot;ForceZeroExtendedAmt&quot;:false,&quot;ReturnReasonCode&quot;:&quot;PRT000R1&quot;,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:-450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:2,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:-51.7699115100,&quot;TaxPercentage&quot;:0.13,&quot;RawTaxAmount&quot;:-51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxOverridePercentage&quot;:0.13,&quot;TaxableAmount&quot;:-450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:3,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;,&quot;ItemId&quot;:&quot;3380087&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:-450,&quot;BaseUnitPrice&quot;:-450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:-450,&quot;GrossAmount&quot;:-450,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:-398,&quot;OriginalBusinessDate&quot;:${DP_BusinessDate},&quot;OriginalLineItemSequence&quot;:4,&quot;OriginalRetailLocationId&quot;:${argRetailLocationId},&quot;OriginalTransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;OriginalWorkstationId&quot;:1,&quot;Quantity&quot;:1,&quot;Return&quot;:true,&quot;ReturnTypeCode&quot;:&quot;VERIFIED&quot;,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380088&quot;,&quot;UnitPrice&quot;:-450,&quot;VatAmount&quot;:-51.7699115100,&quot;ForceZeroExtendedAmt&quot;:false,&quot;ReturnReasonCode&quot;:&quot;PRT000R1&quot;,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:-450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:3,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:-51.7699115100,&quot;TaxPercentage&quot;:0.13,&quot;RawTaxAmount&quot;:-51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxOverridePercentage&quot;:0.13,&quot;TaxableAmount&quot;:-450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:4,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleReturnLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseExtendedPrice&quot;:-450,&quot;BaseUnitPrice&quot;:-450,&quot;MerchLevel1Id&quot;:&quot;110G&quot;,&quot;ExtendedAmount&quot;:-450,&quot;GrossAmount&quot;:-450,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;ItemIdEntryMethodCode&quot;:&quot;KEYBOARD.KEYBOARD&quot;,&quot;NetAmount&quot;:-398,&quot;OriginalBusinessDate&quot;:${DP_BusinessDate},&quot;OriginalLineItemSequence&quot;:5,&quot;OriginalRetailLocationId&quot;:${argRetailLocationId},&quot;OriginalTransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;OriginalWorkstationId&quot;:1,&quot;Quantity&quot;:1,&quot;Return&quot;:true,&quot;ReturnTypeCode&quot;:&quot;VERIFIED&quot;,&quot;SaleReturnLineItemTypeCode&quot;:&quot;SALE&quot;,&quot;ScannedItemId&quot;:&quot;3380088&quot;,&quot;UnitPrice&quot;:-450,&quot;VatAmount&quot;:-51.7699115100,&quot;ForceZeroExtendedAmt&quot;:false,&quot;ReturnReasonCode&quot;:&quot;PRT000R1&quot;,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;NetQuantity&quot;:1,&quot;GrossQuantity&quot;:1,&quot;RegularBasePrice&quot;:-450,&quot;PricePropertyCode&quot;:&quot;REGULAR_PRICE&quot;,&quot;AttachedItemFlag&quot;:false,&quot;InitialQuantity&quot;:1,&quot;NotReturnable&quot;:false,&quot;ExcludeFromNetSales&quot;:false,&quot;MeasurementRequired&quot;:false,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.SaleReturnLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;ITEM&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:4,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;CommissionModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;CommissionModifierSequenceNbr&quot;:1,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PercentageOfItem&quot;:1,&quot;EmployeePartyId&quot;:0}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;SaleTaxModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;SaleTaxModifierSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;WorkstationId&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;TaxAmount&quot;:-51.7699115100,&quot;TaxPercentage&quot;:0.13,&quot;RawTaxAmount&quot;:-51.7699115100000000,&quot;RawTaxPercentage&quot;:0.13,&quot;TaxExemptAmount&quot;:0,&quot;TaxOverride&quot;:false,&quot;TaxOverridePercentage&quot;:0.13,&quot;TaxableAmount&quot;:-450,&quot;Void&quot;:false,&quot;TaxGroupId&quot;:&quot;VATCN&quot;,&quot;TaxLocationId&quot;:&quot;VATCN&quot;,&quot;TaxRuleSequence&quot;:1,&quot;AuthorityId&quot;:&quot;VATCN&quot;,&quot;AuthorityName&quot;:&quot;China (CN)&quot;,&quot;AuthorityTypeCode&quot;:&quot;VATCN&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailInventoryLocationModifier&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;TransactionLineItemSequence&quot;:5,&quot;ModifierSequence&quot;:1,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;DestinationLocationId&quot;:&quot;1&quot;,&quot;DestinationBucketId&quot;:&quot;ON_HAND&quot;,&quot;ItemId&quot;:&quot;3380088&quot;,&quot;Quantity&quot;:1,&quot;ActionCode&quot;:&quot;ITEM_RETURN&quot;,&quot;Void&quot;:false}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TenderLineItem&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;Amount&quot;:-1800,&quot;Change&quot;:false,&quot;HostValidation&quot;:false,&quot;TenderId&quot;:&quot;CNY_CURRENCY&quot;,&quot;TenderStatusCode&quot;:&quot;Refund&quot;,&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;RetailTransactionLineItemSequence&quot;:6,&quot;ClassName&quot;:&quot;dtv.xst.dao.ttr.impl.TenderLineItem&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;EndDateTimestamp&quot;:${DP_BusinessDate},&quot;LineItemTypeCode&quot;:&quot;TENDER&quot;,&quot;Void&quot;:false,&quot;GenericStorage&quot;:false,&quot;TLogSequence&quot;:5,&quot;CurrencyId&quot;:&quot;CNY&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PosTransactionProperty&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;PropertyCode&quot;:&quot;RECEIPT_DELIVERY_METHOD&quot;,&quot;Type&quot;:&quot;STRING&quot;,&quot;StringValue&quot;:&quot;PAPER&quot;,&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;TransactionVersion&quot;,&quot;cmd&quot;:&quot;INSERT_OR_UPDATE|INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;BaseAppVersion&quot;:&quot;17.0.2.0.46&quot;,&quot;BaseAppDate&quot;:1541628862000,&quot;BaseSchemaVersion&quot;:&quot;17.0.2.0.46&quot;,&quot;BaseSchemaDate&quot;:1575424021000,&quot;CustomerAppVersion&quot;:&quot;1.14.1 - 0.0&quot;,&quot;CustomerSchemaVersion&quot;:&quot;1.14.1 - 0.0&quot;,&quot;CustomerSchemaDate&quot;:1575424021000}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T010_Pay_PosLogData" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PosLogData" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;PosLogData&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;PoslogData&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;POSLog xmlns=\&quot;http://www.nrf-arts.org/IXRetail/namespace/\&quot;\n             xmlns:dtv=\&quot;http://www.datavantagecorp.com/xstore/\&quot;\n             xmlns:xs=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;\n             xs:schemaLocation=\&quot;http://www.nrf-arts.org/IXRetail/namespace/ POSLog.xsd\&quot; &gt;\n&lt;Transaction xmlns:dtv=\&quot;http://www.datavantagecorp.com/xstore/\&quot; CancelFlag=\&quot;false\&quot; OfflineFlag=\&quot;false\&quot; TrainingModeFlag=\&quot;false\&quot; dtv:AppVersion=\&quot;17.0.2.0.46 - 1.14.1 - 0.0\&quot; dtv:TransactionType=\&quot;RETAIL_SALE\&quot; &gt;\n&lt;dtv:OrganizationID&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:OrganizationID&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;TillID&gt;&lt;![CDATA[${argRetailLocationId}001000031]]&gt;&lt;/TillID&gt;\n&lt;dtv:CashDrawerID&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:CashDrawerID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[${DP_SequenceNumber_Return}]]&gt;&lt;/SequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T14:57:20.747]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:07:26.292]]&gt;&lt;/EndDateTime&gt;\n&lt;OperatorID&gt;&lt;![CDATA[1]]&gt;&lt;/OperatorID&gt;\n&lt;CurrencyCode&gt;&lt;![CDATA[CNY]]&gt;&lt;/CurrencyCode&gt;\n&lt;dtv:PosTransactionProperties&gt;\n&lt;dtv:PosTransactionPropertyCode&gt;&lt;![CDATA[RECEIPT_DELIVERY_METHOD]]&gt;&lt;/dtv:PosTransactionPropertyCode&gt;\n&lt;dtv:PosTransactionPropertyValue&gt;&lt;![CDATA[PAPER]]&gt;&lt;/dtv:PosTransactionPropertyValue&gt;\n&lt;/dtv:PosTransactionProperties&gt;\n&lt;RetailTransaction TransactionStatus=\&quot;Delivered\&quot; TypeCode=\&quot;Transaction\&quot;&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[1]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:18.684]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:18.785]]&gt;&lt;/EndDateTime&gt;\n&lt;Return ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 2]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[-51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;TransactionLink ReasonCode=\&quot;Return\&quot;&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[${DP_SequenceNumber_Sale}]]&gt;&lt;/SequenceNumber&gt;\n&lt;LineItemSequenceNumber&gt;&lt;![CDATA[1]]&gt;&lt;/LineItemSequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;/TransactionLink&gt;\n&lt;Disposal Method=\&quot;ReturnToStock\&quot; /&gt;\n&lt;Reason&gt;&lt;![CDATA[PRT000R1]]&gt;&lt;/Reason&gt;\n&lt;dtv:ReturnType&gt;&lt;![CDATA[VERIFIED]]&gt;&lt;/dtv:ReturnType&gt;\n&lt;dtv:Disposition dtv:LocationId=\&quot;1\&quot; dtv:BucketId=\&quot;ON_HAND\&quot; dtv:InventoryActionCode=\&quot;ITEM_RETURN\&quot;/&gt;\n&lt;/Return&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[2]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:18.905]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:19.084]]&gt;&lt;/EndDateTime&gt;\n&lt;Return ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380087]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 2]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[-51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;TransactionLink ReasonCode=\&quot;Return\&quot;&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[${DP_SequenceNumber_Sale}]]&gt;&lt;/SequenceNumber&gt;\n&lt;LineItemSequenceNumber&gt;&lt;![CDATA[3]]&gt;&lt;/LineItemSequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;/TransactionLink&gt;\n&lt;Disposal Method=\&quot;ReturnToStock\&quot; /&gt;\n&lt;Reason&gt;&lt;![CDATA[PRT000R1]]&gt;&lt;/Reason&gt;\n&lt;dtv:ReturnType&gt;&lt;![CDATA[VERIFIED]]&gt;&lt;/dtv:ReturnType&gt;\n&lt;dtv:Disposition dtv:LocationId=\&quot;1\&quot; dtv:BucketId=\&quot;ON_HAND\&quot; dtv:InventoryActionCode=\&quot;ITEM_RETURN\&quot;/&gt;\n&lt;/Return&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[3]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:19.126]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:19.188]]&gt;&lt;/EndDateTime&gt;\n&lt;Return ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 4]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[-51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;TransactionLink ReasonCode=\&quot;Return\&quot;&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[${DP_SequenceNumber_Sale}]]&gt;&lt;/SequenceNumber&gt;\n&lt;LineItemSequenceNumber&gt;&lt;![CDATA[4]]&gt;&lt;/LineItemSequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;/TransactionLink&gt;\n&lt;Disposal Method=\&quot;ReturnToStock\&quot; /&gt;\n&lt;Reason&gt;&lt;![CDATA[PRT000R1]]&gt;&lt;/Reason&gt;\n&lt;dtv:ReturnType&gt;&lt;![CDATA[VERIFIED]]&gt;&lt;/dtv:ReturnType&gt;\n&lt;dtv:Disposition dtv:LocationId=\&quot;1\&quot; dtv:BucketId=\&quot;ON_HAND\&quot; dtv:InventoryActionCode=\&quot;ITEM_RETURN\&quot;/&gt;\n&lt;/Return&gt;\n&lt;/LineItem&gt;\n&lt;LineItem EntryMethod=\&quot;Keyed\&quot; VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[4]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:19.226]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:19.412]]&gt;&lt;/EndDateTime&gt;\n&lt;Return ItemType=\&quot;Stock\&quot;&gt;\n&lt;ItemID&gt;&lt;![CDATA[3380088]]&gt;&lt;/ItemID&gt;\n&lt;Description&gt;&lt;![CDATA[Speed Short BLK 4]]&gt;&lt;/Description&gt;\n&lt;RegularSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/RegularSalesUnitPrice&gt;\n&lt;ActualSalesUnitPrice&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ActualSalesUnitPrice&gt;\n&lt;ExtendedAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/ExtendedAmount&gt;\n&lt;Quantity&gt;&lt;![CDATA[1]]&gt;&lt;/Quantity&gt;\n&lt;dtv:UnitOfMeasureCode&gt;&lt;![CDATA[EA]]&gt;&lt;/dtv:UnitOfMeasureCode&gt;\n&lt;MerchandiseHierarchy Level=\&quot;GROUP\&quot;&gt;&lt;![CDATA[110G]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;DEPARTMENT\&quot;&gt;&lt;![CDATA[102D]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;CLASS\&quot;&gt;&lt;![CDATA[12C]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;MerchandiseHierarchy Level=\&quot;SUBCLASS\&quot;&gt;&lt;![CDATA[20S]]&gt;&lt;/MerchandiseHierarchy&gt;\n&lt;Associate&gt;\n&lt;AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/AssociateID&gt;\n&lt;/Associate&gt;\n&lt;dtv:PercentageOfItem&gt;\n&lt;dtv:AssociateID&gt;&lt;![CDATA[0]]&gt;&lt;/dtv:AssociateID&gt;\n&lt;dtv:Percentage&gt;&lt;![CDATA[1]]&gt;&lt;/dtv:Percentage&gt;\n&lt;/dtv:PercentageOfItem&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[-450.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[-51.7699115]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;TransactionLink ReasonCode=\&quot;Return\&quot;&gt;\n&lt;RetailStoreID&gt;&lt;![CDATA[${argRetailLocationId}]]&gt;&lt;/RetailStoreID&gt;\n&lt;WorkstationID&gt;&lt;![CDATA[1]]&gt;&lt;/WorkstationID&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[${DP_SequenceNumber_Sale}]]&gt;&lt;/SequenceNumber&gt;\n&lt;LineItemSequenceNumber&gt;&lt;![CDATA[5]]&gt;&lt;/LineItemSequenceNumber&gt;\n&lt;BusinessDayDate&gt;&lt;![CDATA[${DP_PreviousDate}]]&gt;&lt;/BusinessDayDate&gt;\n&lt;/TransactionLink&gt;\n&lt;Disposal Method=\&quot;ReturnToStock\&quot; /&gt;\n&lt;Reason&gt;&lt;![CDATA[PRT000R1]]&gt;&lt;/Reason&gt;\n&lt;dtv:ReturnType&gt;&lt;![CDATA[VERIFIED]]&gt;&lt;/dtv:ReturnType&gt;\n&lt;dtv:Disposition dtv:LocationId=\&quot;1\&quot; dtv:BucketId=\&quot;ON_HAND\&quot; dtv:InventoryActionCode=\&quot;ITEM_RETURN\&quot;/&gt;\n&lt;/Return&gt;\n&lt;/LineItem&gt;\n&lt;LineItem  VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[5]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:06:14.528]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:07:21.904]]&gt;&lt;/EndDateTime&gt;\n&lt;Tender TenderType=\&quot;Cash\&quot; TypeCode=\&quot;Refund\&quot; dtv:ChangeFlag=\&quot;false\&quot;&gt;\n&lt;TenderID&gt;&lt;![CDATA[CNY_CURRENCY]]&gt;&lt;/TenderID&gt;\n&lt;Amount Currency=\&quot;CNY\&quot;&gt;&lt;![CDATA[-1800.00]]&gt;&lt;/Amount&gt;\n&lt;/Tender&gt;\n&lt;/LineItem&gt;\n&lt;LineItem  VoidFlag=\&quot;false\&quot;&gt;\n&lt;SequenceNumber&gt;&lt;![CDATA[6]]&gt;&lt;/SequenceNumber&gt;\n&lt;BeginDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:18.873]]&gt;&lt;/BeginDateTime&gt;\n&lt;EndDateTime&gt;&lt;![CDATA[${DP_PreviousDate}T15:02:18.873]]&gt;&lt;/EndDateTime&gt;\n&lt;Tax TaxType=\&quot;dtv:Vat\&quot; dtv:VoidFlag=\&quot;false\&quot;&gt;\n&lt;TaxAuthority&gt;&lt;![CDATA[VATCN]]&gt;&lt;/TaxAuthority&gt;\n&lt;TaxableAmount&gt;&lt;![CDATA[-1800.00]]&gt;&lt;/TaxableAmount&gt;\n&lt;Amount&gt;&lt;![CDATA[-207.0800000]]&gt;&lt;/Amount&gt;\n&lt;Percent&gt;&lt;![CDATA[0.1300000]]&gt;&lt;/Percent&gt;\n&lt;dtv:TaxLocationId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxLocationId&gt;\n&lt;dtv:TaxGroupId&gt;&lt;![CDATA[VATCN]]&gt;&lt;/dtv:TaxGroupId&gt;\n&lt;/Tax&gt;\n&lt;/LineItem&gt;\n&lt;Total TotalType=\&quot;TransactionGrandAmount\&quot;&gt;&lt;![CDATA[-1800.00]]&gt;&lt;/Total&gt;\n&lt;RoundedTotal&gt;&lt;![CDATA[0.00]]&gt;&lt;/RoundedTotal&gt;\n&lt;Customer&gt;\n&lt;Name&gt;&lt;![CDATA[Mark  TestCN050718_2]]&gt;&lt;/Name&gt;\n&lt;ActiveFlag&gt;&lt;![CDATA[false]]&gt;&lt;/ActiveFlag&gt;\n&lt;Address&gt;\n&lt;/Address&gt;\n&lt;eMail&gt;&lt;![CDATA[mark.eloquaps_test@gmail.com]]&gt;&lt;/eMail&gt;\n&lt;ContactFlag&gt;&lt;![CDATA[false]]&gt;&lt;/ContactFlag&gt;\n&lt;eMailReceipt&gt;&lt;![CDATA[false]]&gt;&lt;/eMailReceipt&gt;\n&lt;dtv:GuestProperty&gt;\n&lt;dtv:Property&gt;\n&lt;dtv:PropertyCode&gt;&lt;![CDATA[OPT_IN_STATUS]]&gt;&lt;/dtv:PropertyCode&gt;\n&lt;dtv:PropertyType&gt;&lt;![CDATA[BOOLEAN]]&gt;&lt;/dtv:PropertyType&gt;\n&lt;dtv:PropertyBoolean&gt;&lt;![CDATA[false]]&gt;&lt;/dtv:PropertyBoolean&gt;\n&lt;/dtv:Property&gt;\n&lt;/dtv:GuestProperty&gt;\n&lt;dtv:CustomerID&gt;&lt;![CDATA[9999490250251342]]&gt;&lt;/dtv:CustomerID&gt;\n&lt;AlternateKey TypeCode=\&quot;XSTORE_ID\&quot;&gt;\n&lt;AlternateID&gt;&lt;![CDATA[9999490250251342]]&gt;&lt;/AlternateID&gt;\n&lt;/AlternateKey&gt;\n&lt;AlternateKey TypeCode=\&quot;XSTORE_CUST_ID\&quot;&gt;\n&lt;AlternateID&gt;&lt;![CDATA[9999490250251342]]&gt;&lt;/AlternateID&gt;\n&lt;/AlternateKey&gt;\n&lt;Telephone PrimaryFlag=\&quot;false\&quot; TypeCode=\&quot;WORKFAX\&quot;&gt;\n&lt;FullTelephoneNumber&gt;&lt;![CDATA[mark.eloquaps_test@gmail.com]]&gt;&lt;/FullTelephoneNumber&gt;\n&lt;dtv:ContactFlag&gt;&lt;![CDATA[false]]&gt;&lt;/dtv:ContactFlag&gt;\n&lt;/Telephone&gt;\n&lt;/Customer&gt;\n&lt;/RetailTransaction&gt;\n&lt;/Transaction&gt;\n&lt;/POSLog&gt;&quot;}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T011_Pay_ReturnedItemJournal" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReturnedItemJournal" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000209,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:1,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:3,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000210,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:3,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:4,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000211,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:4,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}],[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;ReturnedItemJournal&quot;,&quot;cmd&quot;:&quot;INSERT&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;WorkstationId&quot;:1,&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;RetailTransactionLineItemSequence&quot;:5,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Sale},&quot;JournalSequence&quot;:${argRetailLocationId}0010000000212,&quot;CreateDate&quot;:${DP_PreviousTime},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;ReturnedCount&quot;:1,&quot;ReturnedRetailLocationId&quot;:${argRetailLocationId},&quot;ReturnedWorkstationId&quot;:1,&quot;ReturnedBusinessDate&quot;:${DP_BusinessDate},&quot;ReturnedRetailTransactionLineItemSequence&quot;:5,&quot;ReturnedTransactionSequence&quot;:${DP_SequenceNumber_Return}}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T012_Pay_RetailTransaction" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RetailTransaction" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;type&quot;:&quot;RetailTransaction&quot;,&quot;cmd&quot;:&quot;UPDATE&quot;,&quot;recordtype&quot;:&quot;dao&quot;},{&quot;CreateDate&quot;:${DP_BusinessDate},&quot;CreateUserId&quot;:&quot;1&quot;,&quot;UpdateDate&quot;:${DP_PreviousTime},&quot;UpdateUserId&quot;:&quot;1&quot;,&quot;CustomerPartyId&quot;:${C_CustID},&quot;OrganizationId&quot;:1,&quot;RetailLocationId&quot;:${argRetailLocationId},&quot;BusinessDate&quot;:${DP_BusinessDate},&quot;WorkstationId&quot;:1,&quot;TransactionSequence&quot;:${DP_SequenceNumber_Return},&quot;ClassName&quot;:&quot;dtv.xst.dao.trl.impl.RetailTransaction&quot;,&quot;BeginDateTimestamp&quot;:${DP_BusinessDate},&quot;TransactionDate&quot;:${DP_BusinessDate},&quot;BeginTimeInt&quot;:145720747,&quot;EndDateTimestamp&quot;:${DP_PreviousDate},&quot;KeyedOffline&quot;:false,&quot;Posted&quot;:true,&quot;SessionId&quot;:${argRetailLocationId}001000031,&quot;Subtotal&quot;:-1800,&quot;TaxAmount&quot;:-207,&quot;RoundedAmount&quot;:0,&quot;Total&quot;:-1800,&quot;TransactionStatusCode&quot;:&quot;COMPLETE&quot;,&quot;TransactionTypeCode&quot;:&quot;RETAIL_SALE&quot;,&quot;GenericStorage&quot;:false,&quot;OperatorPartyId&quot;:1,&quot;PostVoid&quot;:false,&quot;CashDrawerId&quot;:&quot;1&quot;}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_RETURNS_T013_SP_FLASH_SALES" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SP_FLASH_SALES" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Timeout&quot;:60000,&quot;persistables&quot;:[[{&quot;v&quot;:&quot;1&quot;,&quot;fields&quot;:{&quot;argRetailLocationId&quot;:&quot;Long&quot;,&quot;argTransSeq&quot;:&quot;Long&quot;,&quot;argOrganizationId&quot;:&quot;Long&quot;,&quot;argWrkstnId&quot;:&quot;Long&quot;,&quot;argBusinessDate&quot;:&quot;Date&quot;},&quot;QueryKey&quot;:&quot;SP_FLASH_SALES&quot;,&quot;recordtype&quot;:&quot;QueryRequest&quot;},{&quot;argTransSeq&quot;:${DP_SequenceNumber_Return},&quot;argOrganizationId&quot;:1,&quot;argRetailLocationId&quot;:${argRetailLocationId},&quot;argWrkstnId&quot;:1,&quot;argBusinessDate&quot;:${DP_BusinessDate}}]]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
              <stringProp name="HTTPSampler.port">18001</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">xcenter/dtx/MakePersistent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dtv-msg-type</stringProp>
                    <stringProp name="Header.value">REPLICATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-835194777">DTX_PERSISTENCE_WAS_SUCCESSFUL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">String name = vars.get(&quot;DP_SequenceNumber_Sale&quot;);
//log.info(name);  // if you want to log something to jmeter.log file
// Pass true if you want to append to existing file
// If you want to overwrite, then don&apos;t pass the second argument
f = new FileOutputStream(&quot;/home/ec2-user/XStore17_APAC_TestPlan/ReturnItems.csv&quot;, true);
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(name);
f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <doubleProp>
            <name>throughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="calcMode">0</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X17_APAC_Transaction_Search" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="RetailLocationId" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_Search_argRetailLocationId.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">argRetailLocationId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TrnNo" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/home/ec2-user/XStore17_APAC_TestPlan/XStore17_APAC_Search_TranNo.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">DP_SequenceNumber_Sale</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="X17_APAC_Transaction Search_T001_Click_Process" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transaction Search_T001_Click_Process" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">xadmin.stg.np.lllretail.vision</stringProp>
            <stringProp name="HTTPSampler.port">18001</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/xcenter/dtx/GetById?ID=1%3A%3A${argRetailLocationId}%3A%3A1576800000000%3A%3A1%3A%3A${DP_SequenceNumber_Sale}&amp;NAME=PosTransaction</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">1::${argRetailLocationId}::1::${__time(YYYYMMdd,)}.${__time(HHmmss.SSS,)}+0800</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dtv-msg-type</stringProp>
                  <stringProp name="Header.value">REPLICATE</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1995675356">Subtotal</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

SimpleDateFormat crunchifyFormat = new SimpleDateFormat(&quot;MM dd yyyy HH:mm:ss.SSS&quot;);
SimpleDateFormat crunchifyFormat1 = new SimpleDateFormat(&quot;MM dd yyyy&quot;);
crunchifyFormat1.setTimeZone(TimeZone.getTimeZone(&quot;UTC&quot;));

Calendar today = Calendar.getInstance();
Calendar yesterday = Calendar.getInstance();
Calendar yesterday1= Calendar.getInstance();
Calendar yesterday2= Calendar.getInstance();

yesterday.add(Calendar.DATE, -3);
yesterday1.add(Calendar.DATE, 0);


Date d = yesterday.getTime(); // get a Date object
Date d1 = yesterday1.getTime();

String currentTime = crunchifyFormat.format(d);
String currentTime1 = crunchifyFormat1.format(d1);


Date date = crunchifyFormat.parse(currentTime);
Date date1 = crunchifyFormat1.parse(currentTime1);


long epochTime = date.getTime();
long epochTime1 = date1.getTime();


String temp=Long.toString(epochTime);
String temp2=Long.toString(epochTime1);

                   
vars.put(&quot;DP_PreviousTime&quot;,temp);
log.info(&quot;Previous Time  is &quot;+vars.get(&quot;DP_PreviousTime&quot;));

vars.put(&quot;DP_BusinessDate&quot;,temp2);
log.info(&quot;Business Date  is &quot;+vars.get(&quot;DP_BusinessDate&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\725150\Desktop\TestPlan_APAC_Seaqwwrch_UNIX.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\725150\Desktop\TestPlan_APAC_Seaqwwrch_UNIX.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <doubleProp>
            <name>throughput</name>
            <value>2.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="calcMode">0</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
